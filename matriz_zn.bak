
Matriz *Zn(Matriz *A, int n) {
    int i, j;
    Matriz *C = NULL;
    if (A != NULL) {
        int colunas = A->colunas;

        C = CriarMatriz(A->linhas, A->colunas);
        for (i = 0; i < A->linhas; i++)
            for (j = 0; j < A->colunas; j++)
                C->dados[i * colunas + j] = abs(A->dados[i * colunas + j]) % n;
    }
    return C;
}

Matriz *OpostoZn(Matriz *A, int n) {
    return Zn(Oposto(A), n);
}

Matriz *SomarZn(Matriz *A, Matriz *B, int n) {
    return Zn(Somar(A, B), n);
}

Matriz *SubtrairZn(Matriz *A, Matriz *B, int n) {
    return Zn(Subtrair(A, B), n);
}

Matriz *MultiplicarZn(Matriz *A, Matriz *B, int n) {
    return Zn(Multiplicar(A, B), n);
}
